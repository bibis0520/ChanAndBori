<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.chan.persistence.BoardDAO">

	<resultMap id="resultForBoardVO" type="com.chan.domain.BoardVO">
		<result column="BOARD_ID"       jdbcType="VARCHAR"		property="boardId" />
		<result column="HRANK_BOARD_ID" jdbcType="VARCHAR"		property="hrankBoardId" />
		<result column="BNO"            jdbcType="INTEGER"		property="bno" />
		<result column="SEQ"            jdbcType="INTEGER"		property="seq" />
		<result column="TITLE"          jdbcType="VARCHAR"		property="title" />
		<result column="CONTENT"        jdbcType="VARCHAR"		property="content" />
		<result column="VIEW_CNT"		jdbcType="INTEGER"		property="viewCnt" />
		<result column="REGI_USER_ID"   jdbcType="VARCHAR"		property="regiUserId" />
		<result column="REGI_DATE"      jdbcType="TIMESTAMP"	property="regiDate" />
		<result column="MODI_USER_ID"   jdbcType="VARCHAR"		property="modiUserId" />
		<result column="MODI_DATE"      jdbcType="TIMESTAMP"	property="modiDate" />
	</resultMap>

	<resultMap id="resultForPagingVO" type="com.chan.domain.PagingVO">
		<result column="BOARD_CNT"      jdbcType="TIMESTAMP"	property="boardCnt" />
	</resultMap>

<!-- LISTPAGE & PAGENATION -->
	<!-- 게시물 전체 리스트 조회 -->
	<select id="listAll" resultMap="resultForBoardVO">
		SELECT		/* com.chan.persistence.BoardDAO.listAll */
					BOARD_ID,
					HRANK_BOARD_ID,
					BNO,
					SEQ,
					TITLE,
					CONTENT,
					REGI_USER_ID,
					REGI_DATE,
					MODI_USER_ID,
					MODI_DATE,
					VIEW_CNT
		FROM
					TBL_BOARD
		ORDER BY
					BNO DESC
	</select>

	<!-- 페이징 처리된 게시물 리스트 조회 -->
	<select id="listPage" resultMap="resultForBoardVO">
		SELECT *	/* com.chan.persistence.BoardDAO.listPage */
		FROM
    		(
    				SELECT ROWNUM RNUM, TBL_BOARD.*
    				FROM
        				(
						        SELECT *
						        FROM TBL_BOARD
						        ORDER BY BNO DESC
				        )
        				TBL_BOARD
    		)
		WHERE RNUM BETWEEN #{startPage} AND #{endPage};
	</select>

	<!-- 게시물의 총 갯수구하는 Query -->
	<select id="boardCnt" resultType="resultForPagingVO">
		SELECT  /* com.chan.persistence.BoardDAO.boardCnt */
				COUNT(1)
		FROM
				TBL_BOARD;
	</select>

<!-- CRUD -->
	<!-- 게시물 등록 -->
	<insert id="create">
		INSERT INTO	/* com.chan.persistence.BoardDAO.create */
		TBL_BOARD
				(
					BOARD_ID,
					HRANK_BOARD_ID,
					BNO,
					SEQ,
					TITLE,
					CONTENT,
					REGI_USER_ID,
					MODI_USER_ID
				)
		VALUES
				(
					FUNC_GET_SEQ_30(),
					#{hrankBoardId},
					(SELECT NVL(MAX(BNO)+1, 1) FROM TBL_BOARD),
					#{seq},
					#{title},
					#{content},
					#{regiUserId},
					#{modiUserId}
				)
	</insert>

	<!-- 게시물 조회 -->
	<select id="read" resultMap="resultForBoardVO">
		SELECT		/* com.chan.persistence.BoardDAO.read */
					BOARD_ID,
					HRANK_BOARD_ID,
					BNO,
					SEQ,
					TITLE,
					CONTENT,
					REGI_USER_ID,
					REGI_DATE,
					MODI_USER_ID,
					MODI_DATE,
					VIEW_CNT
		FROM
					TBL_BOARD
		WHERE
					BNO = #{bno}
	</select>

	<!-- 게시물 수정 -->
	<update id="update">
		UPDATE 		/* com.chan.persistence.BoardDAO.update */
					TBL_BOARD
		SET
					TITLE 			= #{title},
					CONTENT 		= #{content},
					MODI_USER_ID 	= #{regiUserId},
					MODI_DATE 		= SYSDATE
		WHERE
					BNO = #{bno}
	</update>

	<!-- 게시물 삭제 -->
	<delete id="remove">
		DELETE FROM /* com.chan.persistence.BoardDAO.remove */
					TBL_BOARD
		WHERE
					BNO = #{bno}
	</delete>

</mapper>

